[include mainsail.cfg]

[include shell_command.cfg]

#[include printer.cfg]

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[skew_correction]


[gcode_macro START_PRINT]
gcode:

    # Set print stats info
    SET_PRINT_STATS_INFO TOTAL_LAYER=0

#-------Set Variables-------#
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER = params.EXTRUDER_TEMP|default(205)|float %}
  {% set extruder_actual = printer.extruder.temperature %}
  {% set MATERIAL = params.MATERIAL|default("PLA") %}

#-------Initialize-------#
 G21 ;Use mm
 M220 ; Set print speed to 100%
 M221 ;Set Flow Rate to 100%
 M107 ;Disable fans
 G92 E0 ;set extruder to zero
 SKEW_PROFILE LOAD=CaliFlower
 SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

 #-------Preheat------#

 M140 S{BED_TEMP} ; Preheat bed

 {% if MATERIAL == "PLA" %}
  M109 s120       ;Set extruder temp to 120 for PLA without oozing - Default temp=120
 {% else %}
  M109 s150       ;Set extruder temp to 150 for everything else without oozing - Default temp=150
 {% endif %}

 M109 S{BED_TEMP} ; Wait for bed to hit temp
 
#--------Home and Clear Bed Mesh--------#
  BED_MESH_CLEAR
  CG28 ;Home
  G90 ;Use absolute postitioning
  M83 ;Extruder to relative mode

#------- Bed Mesh -------#
 BED_MESH_CALIBRATE ;Auto level

#------Final Heat-------#
 M106 S0 ;Disable Fan
 RESPOND MSG="Waiting for Hotend..."
 M109 S{EXTRUDER};Wait for extruder temp
 M190 S{BED_TEMP} ;Wait for bed temp

#------Purge-----#
; G1 E28 F1200 ;Extrude Filament to Hotend - Default = Disabled
 G92 E0 ;set extruder to zero
  RESPOND MSG="Print Started!"


[gcode_macro END_PRINT]
gcode:


  # Move the nozzle up 30mm before retracting
  G91 # Use relative Postitioning
  G1 Z30.0 F9000 # Move up 30 mm relative to current postitioning
  G90 # Use absouluto Postitioning

  # Filament retraction at print stop
  G1 E-3 F1200 # Retract 3mm of filament

 # Turn off nozzle heater
 SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

 # Turn off bed heater
 SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0

 PLAY_TONE

 # Home all Axis
 G28

 # Move the nozzle 40mm up
 G1 Z40.0 F9000

 # Disable motors
 M84

[gcode_macro EXTRUDE_50]
gcode:
 G91
 G1 E50 F1500
 G90

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/klipper-backup/script.sh
timeout: 90.0
verbose: True

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro CG28] #Check if axis is homed. If not - home
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    #SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    #SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off


[gcode_macro M300]
gcode:
       # Use a default 1kHz tone if S is omitted.
       {% set S = params.S|default(260)|int %}
       # Use a 10ms duration if P is omitted.
       {% set P = params.P|default(100)|int %}
      SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
       G4 P{P}
      SET_PIN PIN=BEEPER_pin VALUE=0


[gcode_macro PLAY_TONE]
gcode:
 M300 s10 p100

 M300 s2900 p750


[filament_switch_sensor switch_sensor]
switch_pin: PG14
runout_gcode:
 PAUSE
 # [pause_resume] is required in printer.cfg
 M117 Filament switch runout
 insert_gcode:
 M117 Filament switch inserted

[filament_motion_sensor encoder_sensor]
switch_pin: PG15
detection_length: 2.88 # accuracy of motion sensor 2.88mm
extruder: extruder
pause_on_runout: False
runout_gcode:
 PAUSE
 # [pause_resume] is required in printer.cfg
 M117 Filament encoder runout
 insert_gcode:
 M117 Filament encoder inserted

 
[gcode_macro M0]
description: Pause the Active Print
gcode:
 RESPOND MSG="Active Print Paused"
 PAUSE

 [gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
